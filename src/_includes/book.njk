---
layout: base.njk
---

<article>
  <h1 class="book-title">{{ title }}</h1>

  {% if img_url %}
  <div class="book-cover">
    <img src="{{ img_url }}" alt="Cover of {{ title }}" />
  </div>
  {% endif %}
  <div class="book-header">
    <p><strong>Author:</strong> {{ author }}</p>

    {% if tags %}
    <p><strong>Tags:</strong> {{ tags | join(', ') }}</p>
    {% endif %} {% if date_read %}
    <p>
      <strong>Timeline:</strong> between {{ date_started | readableDate }} and
      {{ date_read | readableDate }}
    </p>
    {% else %}
    <p>
      <strong>Progress:</strong> {{ pct_progress }}% as of {{ latest_progress |
      readableDate }}
    </p>
    {% endif %}
  </div>
  <div class="book-body">
    {% block content %} {{ content | safe }} {% endblock %}
  </div>
  <div class="spoiler_btn"></div>
  {% if comments %}

  <section id="comments">
    <h2>Comments</h2>
    <form id="comment-form">
      <input type="text" name="author" placeholder="Name (optional)" />
      <textarea
        name="message"
        required
        placeholder="Write a comment…"
      ></textarea>
      <button type="submit">Post</button>
    </form>
    <ul id="comment-list" aria-live="polite"></ul>
  </section>

  <script type="module">
    const form = document.getElementById("comment-form")
    const list = document.getElementById("comment-list")
    const API = "https://api.c2lem.com/api/comments"
    const slug = "{{ page.url }}" // or however you compute it

    if (form && list) {
      async function loadComments() {
        const res = await fetch(`${API}?slug=${encodeURIComponent(slug)}`)
        const { items = [] } = await res.json()
        list.innerHTML = items
          .map(
            (c) => `
      <li>
        <strong>${escapeHtml(c.author || "Anonymous")}</strong>
        <small> — ${new Date(c.created_at).toLocaleString()}</small>
        <p>${escapeHtml(c.message)}</p>
      </li>
    `
          )
          .join("")
      }

      form.addEventListener("submit", async (e) => {
        e.preventDefault()

        // Don’t rely on e.currentTarget; use the captured form reference
        const submitBtn = form.querySelector('button[type="submit"]')
        submitBtn?.setAttribute("disabled", "true")

        try {
          const fd = new FormData(form)
          const payload = {
            slug,
            author: fd.get("author"),
            message: fd.get("message"),
          }

          const res = await fetch(API, {
            method: "POST",
            headers: { "content-type": "application/json" },
            body: JSON.stringify(payload),
          })

          if (!res.ok) {
            const { error } = await res.json().catch(() => ({}))
            throw new Error(error || `HTTP ${res.status}`)
          }

          form.reset() // ← safe now
          await loadComments() // refresh list
        } catch (err) {
          console.error(err)
          alert("Failed to post comment.")
        } finally {
          submitBtn?.removeAttribute("disabled")
        }
      })

      loadComments()
    }

    function escapeHtml(s) {
      return String(s).replace(
        /[&<>"']/g,
        (m) =>
          ({
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
          }[m])
      )
    }
  </script>

  {% endif %} {% if date_read %} {% if bsky_link %}
  <!-- Bluesky Comments Link Button -->
    <a
      href="{{ bsky_link }}"
      target="_blank"
      rel="noopener noreferrer"
      class="bluesky-link"
    >
      Comments on Bluesky
    </a>

  {% endif %}

  <p style="margin-top: 2rem">
    <a href="/books/" class="back-link">← Back to Books</a>
  </p>
  {% endif %}
</article>
